String.prototype.removeStopWords = function() {
    var x;
    var y;
    var word;
    var stop_word;
    var regex_str;
    var regex;
    var cleansed_string = this.valueOf();
    var stop_words = new Array(
       	'de',
		'a',
		'b',
		'c',
		'd',
		'f',
		'g',
		'h',
		'i',
		'j',
		'k',
		'l',
		'm',
		'n',
		'p',
		'q',
		'r',
		's',
		't',
		'u',
		'v',
		'w',
		'x',
		'y',
		'z',
		'o',
		'que',
		'e',
		'do',
		'da',
		'em',
		'para',
		'é',
		'com',
		'não',
		'os',
		'no',
		'se',
		'na',
		'por',
		'mais',
		'as',
		'dos',
		'como',
		'mas',
		'foi',
		'ao',
		'ele',
		'das',
		'tem',
		'à',
		'seu',
		'sua',
		'ou',
		'ser',
		'quando',
		'muito',
		'há',
		'nos',
		'já',
		'está',
		'eu',
		'também',
		'só',
		'pelo',
		'pela',
		'até',
		'isso',
		'ela',
		'entre',
		'era',
		'depois',
		'sem',
		'mesmo',
		'aos',
		'ter',
		'seus',
		'quem',
		'nas',
		'me',
		'esse',
		'eles',
		'estão',
		'você',
		'tinha',
		'foram',
		'essa',
		'num',
		'nem',
		'suas',
		'meu',
		'às',
		'minha',
		'têm',
		'numa',
		'pelos',
		'elas',
		'havia',
		'seja',
		'qual',
		'será',
		'nós',
		'tenho',
		'lhe',
		'deles',
		'essas',
		'esses',
		'pelas',
		'este',
		'fosse',
		'dele',
		'tu',
		'te',
		'vocês',
		'vos',
		'lhes',
		'meus',
		'minhas',
		'teu',
		'tua',
		'teus',
		'tuas',
		'nosso',
		'nossa',
		'nossos',
		'nossas',
		'dela',
		'delas',
		'esta',
		'estes',
		'estas',
		'aquele',
		'aquela',
		'aqueles',
		'aquelas',
		'isto',
		'aquilo',
		'estou',
		'está',
		'estamos',
		'estão',
		'estive',
		'esteve',
		'estivemos',
		'estiveram',
		'estava',
		'estávamos',
		'estavam',
		'estivera',
		'estivéramos',
		'esteja',
		'estejamos',
		'estejam',
		'estivesse',
		'estivéssemos',
		'estivessem',
		'estiver',
		'estivermos',
		'estiverem',
		'hei',
		'há',
		'havemos',
		'hão',
		'houve',
		'houvemos',
		'houveram',
		'houvera',
		'houvéramos',
		'haja',
		'hajamos',
		'hajam',
		'houvesse',
		'houvéssemos',
		'houvessem',
		'houver',
		'houvermos',
		'houverem',
		'houverei',
		'houverá',
		'houveremos',
		'houverão',
		'houveria',
		'houveríamos',
		'houveriam',
		'sou',
		'somos',
		'são',
		'era',
		'éramos',
		'eram',
		'fui',
		'foi',
		'fomos',
		'foram',
		'fora',
		'fôramos',
		'seja',
		'sejamos',
		'sejam',
		'fosse',
		'fôssemos',
		'fossem',
		'for',
		'formos',
		'forem',
		'serei',
		'será',
		'seremos',
		'serão',
		'seria',
		'seríamos',
		'seriam',
		'tenho',
		'tem',
		'temos',
		'tém',
		'tinha',
		'tínhamos',
		'tinham',
		'tive',
		'teve',
		'tivemos',
		'tiveram',
		'tivera',
		'tivéramos',
		'tenha',
		'tenhamos',
		'tenham',
		'tivesse',
		'tivéssemos',
		'tivessem',
		'tiver',
		'tivermos',
		'tiverem',
		'terei',
		'terá',
		'teremos',
		'terão',
		'teria',
		'teríamos',
		'teriam',
    )
         
    // Split out all the individual words in the phrase
    words = cleansed_string.match(/[^\s]+|\s+[^\s+]$/g);

    if(words !== null){
	    // Review all the words
	    for(x=0; x < words.length; x++) {
	        // For each word, check all the stop words
	        for(y=0; y < stop_words.length; y++) {
	            // Get the current word
	            word = words[x].replace(/\s+|[^a-z]+/ig, "");   // Trim the word and remove non-alpha
	             
	            // Get the stop word
	            stop_word = stop_words[y];
	             
	            // If the word matches the stop word, remove it from the keywords
	            if(word.toLowerCase() == stop_word) {
	                // Build the regex
	                regex_str = "^\\s*"+stop_word+"\\s*$";      // Only word
	                regex_str += "|^\\s*"+stop_word+"\\s+";     // First word
	                regex_str += "|\\s+"+stop_word+"\\s*$";     // Last word
	                regex_str += "|\\s+"+stop_word+"\\s+";      // Word somewhere in the middle
	                regex = new RegExp(regex_str, "ig");
	             
	                // Remove the word from the keywords
	                cleansed_string = cleansed_string.replace(regex, " ");
	            }
	        }
	    }
    }

    return cleansed_string.replace(/^\s+|\s+$/g, "");
}